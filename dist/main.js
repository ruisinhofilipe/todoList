(()=>{"use strict";var n={28:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,"* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n}\n\n.overlay {\n    pointer-events: none;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    z-index: 10;\n}\n\n.overlay.visible {\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: visible;\n}\n\n.mainDiv {\n    min-height: 100vh;\n    display: flex;\n}\n\n.projectsDiv {\n    background-color: #575E9B;\n    width: 35%;\n    display: flex;\n    flex-direction: column;\n    gap: 3rem;\n}\n\n.addProject-popup {\n    background-color: #5C6DFF;\n    padding: 1.5rem 6rem;\n    gap: 2rem;\n    border-radius: 0.5rem;\n    display: none;\n    z-index: 14;\n}\n\n.addProject-popup.visible {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.addProject-popup input {\n    border: none;\n    outline-color: transparent;\n    padding: 0.2rem 0.5rem;\n    border-radius: 0.5rem;\n    background-color: rgb(190, 189, 189);\n}\n\n.addProject-popup h2 {\n    align-self: center;\n}\n\n.buttonContainer {\n    display: flex;\n    justify-content: space-between;\n}\n\n.confirmButton {\n    border: none;\n    border-radius: 0.2rem;\n    padding: 0.4rem 1rem;\n    background-color: rgb(68, 193, 68);\n}\n\n.cancelButton {\n    border: none;\n    border-radius: 0.2rem;\n    padding: 0.4rem 1rem;\n    background-color: rgb(217, 83, 83);\n}\n\n.confirmButton:hover,\n.cancelButton:hover {\n    cursor: pointer;\n    filter: brightness(0.7);\n}\n\n.displayProjects {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n}\n\n.projectsNameDiv {\n    font-size: 1.5rem;\n    padding: 1rem;\n    display: flex;\n    width: 65%;\n    border-radius: 0.6rem;\n    justify-content: space-between;\n    background-color: #16205E;\n}\n\n.projectsNameDiv.clicked {\n    cursor: pointer;\n    background-color: #6978d3;\n    font-size: 1.47rem;\n    border-radius: 0.6rem;\n    width: 72%;\n}\n\n.projectsNameDiv:hover {\n    cursor: pointer;\n    background-color: #333e86;\n    border-radius: 0.6rem;\n    width: 67%;\n}\n\n.projectsNameDiv.clicked:hover {\n    cursor: pointer;\n    background-color: #6978d3;\n    font-size: 1.47rem;\n    border-radius: 0.6rem;\n    width: 72%;\n}\n\n.todosDiv {\n    width: 65%;\n    background-color: #363E88;\n}\n\n.displayTodos {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.displayTodo {\n    display: flex;\n    gap: 1.5rem;\n    font-size: 1.5rem;\n    padding: 1rem;\n    display: flex;\n    width: 75%;\n    justify-content: space-between;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;IACpB,eAAe;IACf,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,WAAW;AACf;;AAEA;IACI,oCAAoC;IACpC,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,oBAAoB;IACpB,SAAS;IACT,qBAAqB;IACrB,aAAa;IACb,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,QAAQ;IACR,SAAS;IACT,gCAAgC;AACpC;;AAEA;IACI,YAAY;IACZ,0BAA0B;IAC1B,sBAAsB;IACtB,qBAAqB;IACrB,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,oBAAoB;IACpB,kCAAkC;AACtC;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,oBAAoB;IACpB,kCAAkC;AACtC;;AAEA;;IAEI,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,aAAa;IACb,UAAU;IACV,qBAAqB;IACrB,8BAA8B;IAC9B,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,kBAAkB;IAClB,qBAAqB;IACrB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,aAAa;IACb,UAAU;IACV,8BAA8B;AAClC",sourcesContent:["* {\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n}\n\n.overlay {\n    pointer-events: none;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    z-index: 10;\n}\n\n.overlay.visible {\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: visible;\n}\n\n.mainDiv {\n    min-height: 100vh;\n    display: flex;\n}\n\n.projectsDiv {\n    background-color: #575E9B;\n    width: 35%;\n    display: flex;\n    flex-direction: column;\n    gap: 3rem;\n}\n\n.addProject-popup {\n    background-color: #5C6DFF;\n    padding: 1.5rem 6rem;\n    gap: 2rem;\n    border-radius: 0.5rem;\n    display: none;\n    z-index: 14;\n}\n\n.addProject-popup.visible {\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.addProject-popup input {\n    border: none;\n    outline-color: transparent;\n    padding: 0.2rem 0.5rem;\n    border-radius: 0.5rem;\n    background-color: rgb(190, 189, 189);\n}\n\n.addProject-popup h2 {\n    align-self: center;\n}\n\n.buttonContainer {\n    display: flex;\n    justify-content: space-between;\n}\n\n.confirmButton {\n    border: none;\n    border-radius: 0.2rem;\n    padding: 0.4rem 1rem;\n    background-color: rgb(68, 193, 68);\n}\n\n.cancelButton {\n    border: none;\n    border-radius: 0.2rem;\n    padding: 0.4rem 1rem;\n    background-color: rgb(217, 83, 83);\n}\n\n.confirmButton:hover,\n.cancelButton:hover {\n    cursor: pointer;\n    filter: brightness(0.7);\n}\n\n.displayProjects {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n}\n\n.projectsNameDiv {\n    font-size: 1.5rem;\n    padding: 1rem;\n    display: flex;\n    width: 65%;\n    border-radius: 0.6rem;\n    justify-content: space-between;\n    background-color: #16205E;\n}\n\n.projectsNameDiv.clicked {\n    cursor: pointer;\n    background-color: #6978d3;\n    font-size: 1.47rem;\n    border-radius: 0.6rem;\n    width: 72%;\n}\n\n.projectsNameDiv:hover {\n    cursor: pointer;\n    background-color: #333e86;\n    border-radius: 0.6rem;\n    width: 67%;\n}\n\n.projectsNameDiv.clicked:hover {\n    cursor: pointer;\n    background-color: #6978d3;\n    font-size: 1.47rem;\n    border-radius: 0.6rem;\n    width: 72%;\n}\n\n.todosDiv {\n    width: 65%;\n    background-color: #363E88;\n}\n\n.displayTodos {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.displayTodo {\n    display: flex;\n    gap: 1.5rem;\n    font-size: 1.5rem;\n    padding: 1rem;\n    display: flex;\n    width: 75%;\n    justify-content: space-between;\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(a[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);t&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),r&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=r):s[2]=r),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var d=n[A],c=t.base?d[0]+t.base:d[0],s=i[c]||0,l="".concat(c," ").concat(s);i[c]=s+1;var u=r(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,t);t.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=r(i[a]);e[A].references--}for(var d=t(n,o),c=0;c<i.length;c++){var s=r(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),i=r(569),a=r.n(i),A=r(565),d=r.n(A),c=r(216),s=r.n(c),l=r(589),u=r.n(l),p=r(28),m={};m.styleTagTransform=u(),m.setAttributes=d(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=s(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=(n,e,r,...t)=>{const o=document.createElement(n);for(let n in e)o.setAttribute(n,e[n]);return o.textContent=r,t.forEach((n=>{o.appendChild(n)})),o};let C,B=[];const v=document.querySelector(".addProject-popup"),I=document.querySelector(".overlay");function b(){document.querySelector(".addPrj").addEventListener("click",(()=>{document.querySelector(".addProject-popup").classList.add("visible"),I.classList.add("visible")})),function(n){let e=document.querySelectorAll(".projectsNameDiv");for(let n=0;n<e.length;n++)e[n].remove()}(),B.forEach((n=>{let e=B.indexOf(n);const r=f("div",{class:"projectsNameDiv",index:e}),t=f("div",{class:"projectsName"},n),o=f("button",{class:"removeProject"},"x");r.appendChild(t),r.appendChild(o),document.querySelector(".displayProjects").appendChild(r),r.addEventListener("click",(()=>{C=r.getAttribute("index"),E(C),b(),document.querySelectorAll(".projectsNameDiv").forEach((n=>{C==n.getAttribute("index")?n.classList.add("clicked"):n.classList.remove("clicked")}))}))}))}let y=[];const g=document.querySelector(".todosDiv"),h=document.querySelector("#newTodoButton"),x=document.querySelector(".displayTodos");function E(n){if(B.length>0){".displayTodo",document.querySelectorAll(".displayTodo").forEach((n=>{n.remove()}));for(let e=0;e<y[n].length;e++){const r=f("div",{class:"displayTodo"},void 0);for(let t in y[n][e])r.appendChild(f("p",{class:`${t}Todo`},`${t}: ${y[n][e][t]}`)),x.appendChild(r),g.appendChild(x)}}}b(),document.querySelector(".confirmButton").addEventListener("click",(()=>{var n;null===(n=document.getElementById("titleProject").value)||B.includes(n)||""===n||" "===n?alert("Please, introduce a valid project name or you that you haven't introduced yet."):(B.push(n),y.push([]),document.getElementById("titleProject").value="",v.classList.remove("visible"),I.classList.remove("visible"),b()),console.log(B)})),document.querySelector(".cancelButton").addEventListener("click",(()=>{document.querySelector(".addProject-popup").classList.remove("visible"),I.classList.remove("visible")})),h.addEventListener("click",(()=>{if(0===B.length)alert("There's no projects");else{let n=document.getElementById("title").value,e=document.getElementById("description").value,r=document.getElementById("dueDate").value;""==r&&(r="No date preview");let t=document.getElementsByClassName("priority")[0].value;y[C].push(((n,e,r,t)=>({title:n,description:e,dueDate:r,priority:t}))(n,e,r,t)),E(C),document.getElementById("title").value="",document.getElementById("description").value="",document.getElementById("dueDate").value="",document.getElementsByClassName("priority")[0].value}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
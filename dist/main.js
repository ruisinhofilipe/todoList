(()=>{"use strict";const e=(e,t,o,...l)=>{const c=document.createElement(e);for(let e in t)c.setAttribute(e,t[e]);return c.textContent=o,l.forEach((e=>{c.appendChild(e)})),c};let t,o=[];const l=document.querySelector(".addProject-popup"),c=document.querySelector(".overlay");function d(){document.querySelectorAll(".projectsNameDiv").forEach((e=>{o.indexOf(t)==e.getAttribute("index")?e.classList.add("clicked"):e.classList.remove("clicked")}))}function n(){document.querySelector(".addPrj").addEventListener("click",(()=>{document.querySelector(".addProject-popup").classList.add("visible"),c.classList.add("visible")})),function(e){let t=document.querySelectorAll(".projectsNameDiv");for(let e=0;e<t.length;e++)t[e].remove()}(),o.forEach((l=>{let c=o.indexOf(l);const r=e("div",{class:"projectsNameDiv",index:c}),s=e("div",{class:"projectsName"},l),a=e("button",{class:"removeProject"},"x");r.appendChild(s),r.appendChild(a),document.querySelector(".displayProjects").appendChild(r),r.addEventListener("click",(()=>{t=r.querySelector(".projectsName").textContent,m(o.indexOf(t)),n(),d()})),a.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation();let l=a.parentNode.getAttribute("index");o.splice(l,1),i.splice(l,1),1==o.length?(t=o[0],n(),m(o.indexOf(t)),d()):o.includes(t)?(n(),m(o.indexOf(t)),d()):o.includes(t)?(t="",n(),removeDom(".displayTodo")):(t=o[0],n(),m(o.indexOf(t)),d())}))}))}const i=[],r=document.querySelector(".displayTodos"),s=document.querySelector(".addTodo"),a=document.querySelector(".new-project-form"),u=document.querySelector(".overlay");function m(l){u.classList.remove("visible"),a.classList.remove("visible"),document.querySelectorAll(".displayTodo").forEach((e=>{e.remove()}));let c=0;if(o.length>0)for(let d=0;d<i[l].length;d++){const n=e("div",{class:"displayTodo"},void 0);for(let t in i[l][d])n.appendChild(e("p",{class:`${t}Todo`},`${t}: ${i[l][d][t]}`));const s=e("button",{class:"removeTodo",indexParagraph:c},"x");n.appendChild(s),r.appendChild(n),c++,s.addEventListener("click",(()=>{i[o.indexOf(t)].splice(s.getAttribute("indexParagraph"),1),m(o.indexOf(t))}))}}function v(){document.getElementById("title").value="",document.getElementById("dueDate").value=""}n(),document.querySelector(".confirmButton").addEventListener("click",(()=>{var e;null===(e=document.getElementById("titleProject").value)||o.includes(e)||""===e||" "===e?alert("Please, introduce a valid project name or you that you haven't introduced yet."):(o.push(e),i.push([]),document.getElementById("titleProject").value="",l.classList.remove("visible"),c.classList.remove("visible"),t=e,n()),d(),m(o.indexOf(t))})),document.querySelector(".cancelButton").addEventListener("click",(()=>{document.querySelector(".addProject-popup").classList.remove("visible"),c.classList.remove("visible")})),s.addEventListener("click",(()=>{u.classList.add("visible"),a.classList.add("visible")})),document.querySelector(".confirmButtonForm").addEventListener("click",(e=>{e.preventDefault(),function(){if(0===o.length)alert("There's no projects"),v();else{let e=document.getElementById("title").value,l=document.getElementById("dueDate").value;""==l&&(l="No date preview");let c=document.getElementById("priority").options[document.getElementById("priority").selectedIndex].text;i[o.indexOf(t)].push(((e,t,o)=>({title:e,dueDate:t,priority:o}))(e,l,c)),m(o.indexOf(t)),v()}}()})),document.querySelector(".cancelButtonForm").addEventListener("click",(e=>{e.preventDefault(),u.classList.remove("visible"),a.classList.remove("visible")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,